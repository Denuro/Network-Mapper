/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package netmap.panels;

import javax.swing.DefaultComboBoxModel;
import javax.swing.text.PlainDocument;
import netmap.components.OnlyNumberDocumentFilter;
import netmap.entities.Port;

/**
 *
 * @author Darlan
 */
public class PortEditorPanel extends javax.swing.JPanel
{

    /**
     * Creates new form PortEditor
     */
    public PortEditorPanel()
    {
        initComponents();
        
        cbType.setModel(new DefaultComboBoxModel<>(Port.TYPES));
        
        ((PlainDocument) tfSpeed.getDocument()).setDocumentFilter(new OnlyNumberDocumentFilter());
        ((PlainDocument) tfAmount.getDocument()).setDocumentFilter(new OnlyNumberDocumentFilter());
    }
    
    public int getType()
    {
        return cbType.getSelectedIndex();
    }
    
    public int getSpeed()
    {
        return Integer.parseInt(tfSpeed.getText());
    }
    
    public int getAmount()
    {
        return Integer.parseInt(tfAmount.getText());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        java.awt.GridBagConstraints gridBagConstraints;

        lbType = new javax.swing.JLabel();
        lbSpeed = new javax.swing.JLabel();
        lbAmount = new javax.swing.JLabel();
        tfSpeed = new javax.swing.JTextField();
        tfAmount = new javax.swing.JTextField();
        lnKbps = new javax.swing.JLabel();
        cbType = new javax.swing.JComboBox<>();

        setLayout(new java.awt.GridBagLayout());

        lbType.setText("Tipo:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(15, 15, 10, 0);
        add(lbType, gridBagConstraints);

        lbSpeed.setText("Velocidade:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 10, 0);
        add(lbSpeed, gridBagConstraints);

        lbAmount.setText("Quantidade:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 15, 0);
        add(lbAmount, gridBagConstraints);

        tfSpeed.setText("1000");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 10, 0);
        add(tfSpeed, gridBagConstraints);

        tfAmount.setText("1");
        tfAmount.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 15, 15);
        add(tfAmount, gridBagConstraints);

        lnKbps.setText("Mbit/s");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 10, 15);
        add(lnKbps, gridBagConstraints);

        cbType.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cbTypeActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(15, 10, 10, 15);
        add(cbType, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void cbTypeActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cbTypeActionPerformed
    {//GEN-HEADEREND:event_cbTypeActionPerformed
        tfSpeed.setText(Port.TYPE_SPEEDS[cbType.getSelectedIndex()]);
    }//GEN-LAST:event_cbTypeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbType;
    private javax.swing.JLabel lbAmount;
    private javax.swing.JLabel lbSpeed;
    private javax.swing.JLabel lbType;
    private javax.swing.JLabel lnKbps;
    private javax.swing.JTextField tfAmount;
    private javax.swing.JTextField tfSpeed;
    // End of variables declaration//GEN-END:variables
}
