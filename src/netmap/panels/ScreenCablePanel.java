/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package netmap.panels;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import netmap.entities.Equipment;
import netmap.entities.ScreenCable;
import netmap.util.Application;

/**
 *
 * @author Julia
 */
public class ScreenCablePanel extends javax.swing.JDialog
{
    private ScreenCable screenCable;
    private int code = JOptionPane.CANCEL_OPTION;
    private String types[] = {
        "Rede cat5",
        "Rede cat5e",
        "Rede cat6",
        "Cordão Óptico SM",
        "Cordão Óptico SM LC/LC",
        "Cordão Óptico SM LC/SC",
        "Cordão Óptico SM SC/SC",
        "Cordão Óptico MM",
        "Cordão Óptico MM LC/LC",
        "Cordão Óptico MM LC/SC",
        "Cordão Óptico MM SC/SC"
    };

    public ScreenCablePanel(ScreenCable screenCable)
    {
        super(Application.getInstance().getMainFrame(), true);
        this.screenCable = screenCable;
     
        init();
        
        lbTitle.setText("Cabo de "+types[screenCable.getType()]);
        tfSpeed.setText(String.valueOf(screenCable.getSpeed()));
        comboType.setSelectedIndex(screenCable.getType());
    }
    
    public ScreenCablePanel()
    {
        super(Application.getInstance().getMainFrame(), true);
        
        init();
        
        lbTitle.setText("Novo Cabo");
        btDelete.setVisible(false);
    }
    
    private void init()
    {
        initComponents();
    }
    
    public ScreenCable getScreenCable()
    {
        if (screenCable == null)
        {
            screenCable = new ScreenCable();
        }
        
        screenCable.setSpeed(Integer.parseInt(tfSpeed.getText()));
        screenCable.setType(comboType.getSelectedIndex());
        
        return screenCable;
    }

    public int getCode()
    {
        return code;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        java.awt.GridBagConstraints gridBagConstraints;

        lbTitle = new javax.swing.JLabel();
        pnData = new javax.swing.JPanel();
        lbSpeed = new javax.swing.JLabel();
        tfSpeed = new javax.swing.JTextField();
        lbType = new javax.swing.JLabel();
        comboType = new javax.swing.JComboBox<>();
        lbMbits = new javax.swing.JLabel();
        pnButtons = new javax.swing.JPanel();
        btOk = new javax.swing.JButton();
        btCancel = new javax.swing.JButton();
        btDelete = new javax.swing.JButton();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        lbTitle.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbTitle.setText("Nova Porta");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_END;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(15, 15, 10, 10);
        getContentPane().add(lbTitle, gridBagConstraints);

        pnData.setLayout(new java.awt.GridBagLayout());

        lbSpeed.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbSpeed.setText("Velocidade:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        pnData.add(lbSpeed, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 10, 0);
        pnData.add(tfSpeed, gridBagConstraints);

        lbType.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbType.setText("Tipo:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        pnData.add(lbType, gridBagConstraints);

        comboType.setModel(new DefaultComboBoxModel(types));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        pnData.add(comboType, gridBagConstraints);

        lbMbits.setText("Mbits/s");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 10, 0);
        pnData.add(lbMbits, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 10, 15);
        getContentPane().add(pnData, gridBagConstraints);

        pnButtons.setLayout(new java.awt.GridBagLayout());

        btOk.setText("Ok");
        btOk.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btOkActionPerformed(evt);
            }
        });
        pnButtons.add(btOk, new java.awt.GridBagConstraints());

        btCancel.setText("Cancelar");
        btCancel.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btCancelActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        pnButtons.add(btCancel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 15, 15);
        getContentPane().add(pnButtons, gridBagConstraints);

        btDelete.setText("Excluir");
        btDelete.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btDeleteActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(15, 0, 10, 15);
        getContentPane().add(btDelete, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void btOkActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btOkActionPerformed
    {//GEN-HEADEREND:event_btOkActionPerformed
        try
        {
            Integer.parseInt(tfSpeed.getText());
        }
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(Application.getInstance().getMainFrame(), "Velocidade inválida.");
            tfSpeed.grabFocus();
            return;
        }
        if (tfSpeed.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(Application.getInstance().getMainFrame(), "A velocidade do cabo é obrigatória");
            tfSpeed.grabFocus();
        }
        else
        {
            code = JOptionPane.OK_OPTION;
            this.dispose();
        }
    }//GEN-LAST:event_btOkActionPerformed

    private void btCancelActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btCancelActionPerformed
    {//GEN-HEADEREND:event_btCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_btCancelActionPerformed

    private void btDeleteActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btDeleteActionPerformed
    {//GEN-HEADEREND:event_btDeleteActionPerformed
        code = 4;
        this.dispose();
    }//GEN-LAST:event_btDeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCancel;
    private javax.swing.JButton btDelete;
    private javax.swing.JButton btOk;
    private javax.swing.JComboBox<String> comboType;
    private javax.swing.JLabel lbMbits;
    private javax.swing.JLabel lbSpeed;
    private javax.swing.JLabel lbTitle;
    private javax.swing.JLabel lbType;
    private javax.swing.JPanel pnButtons;
    private javax.swing.JPanel pnData;
    private javax.swing.JTextField tfSpeed;
    // End of variables declaration//GEN-END:variables
}
